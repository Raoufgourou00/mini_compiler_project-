Grammar

    0 $accept: S $end

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer

    2 LISTE_DEC: LISTE_DEC DEC
    3          | /* empty */

    4 DEC: TYPE LISTE_VAR pvg
    5    | mc_const idf aff VALEUR pvg
    6    | mc_struct acc_ouv LISTE_DEC_SIMPLE acc_fer idf pvg

    7 VALEUR: entier
    8       | reel

    9 TYPE: TYPE_SIMPLE
   10     | mc_struct idf

   11 TYPE_SIMPLE: mc_integer
   12            | mc_float

   13 LISTE_VAR: LISTE_VAR vg idf
   14          | LISTE_VAR vg idf croch_ouv entier croch_fer
   15          | idf
   16          | idf croch_ouv entier croch_fer

   17 LISTE_DEC_SIMPLE: LISTE_DEC_SIMPLE DEC_SIMPLE
   18                 | /* empty */

   19 DEC_SIMPLE: TYPE_SIMPLE LISTE_VAR_SIMPLE pvg

   20 LISTE_VAR_SIMPLE: LISTE_VAR_SIMPLE vg idf
   21                 | idf

   22 LISTE_INST: LISTE_INST INST
   23           | /* empty */

   24 INST: INST_AFF
   25     | INST_IF
   26     | INST_WHILE
   27     | INST_FOR

   28 INST_AFF: idf aff EXP pvg
   29         | idf point idf aff EXP pvg
   30         | A aff EXP pvg

   31 A: idf croch_ouv EXP croch_fer

   32 EXP: EXP plus EXP
   33    | EXP moins EXP
   34    | EXP slash EXP
   35    | EXP etoile EXP
   36    | moins EXP
   37    | plus EXP
   38    | idf
   39    | idf point idf
   40    | idf croch_ouv EXP croch_fer
   41    | entier
   42    | reel
   43    | par_ouv EXP par_fer

   44 INST_IF: AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   45        | AVANT_INST acc_ouv LISTE_INST acc_fer

   46 AVANT_ELSE: AVANT_INST acc_ouv LISTE_INST acc_fer

   47 AVANT_INST: mc_if par_ouv COND par_fer

   48 INST_WHILE: APRES_COND_WHILE acc_ouv LISTE_INST acc_fer

   49 APRES_COND_WHILE: AVANT_COND_WHILE par_ouv COND par_fer

   50 AVANT_COND_WHILE: mc_while

   51 INST_FOR: AVANT_INST_FOR acc_ouv LISTE_INST acc_fer

   52 AVANT_INST_FOR: AVANT_COND_FOR EXP par_fer

   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points EXP deux_points entier deux_points

   54 COND: COND or COND
   55     | COND and COND
   56     | not COND
   57     | EXP inf EXP
   58     | EXP sup EXP
   59     | EXP inf_egal EXP
   60     | EXP sup_egal EXP
   61     | EXP egal_egal EXP
   62     | EXP non_egal EXP
   63     | par_ouv COND par_fer


Terminals, with rules where they appear

$end (0) 0
error (256)
mc_var (258) 1
mc_code (259) 1
mc_integer (260) 11
mc_float (261) 12
mc_const (262) 5
mc_struct (263) 6 10
mc_if (264) 47
mc_else (265) 44
mc_for (266) 53
mc_while (267) 50
deux_points (268) 53
acc_ouv (269) 1 6 44 45 46 48 51
acc_fer (270) 1 6 44 45 46 48 51
croch_ouv (271) 14 16 31 40
croch_fer (272) 14 16 31 40
pvg (273) 4 5 6 19 28 29 30
vg (274) 13 14 20
aff (275) 5 28 29 30
par_ouv (276) 43 47 49 53 63
par_fer (277) 43 47 49 52 63
point (278) 29 39
plus (279) 32 37
moins (280) 33 36
slash (281) 34
etoile (282) 35
and (283) 55
or (284) 54
not (285) 56
sup (286) 58
inf (287) 57
sup_egal (288) 60
inf_egal (289) 59
egal_egal (290) 61
non_egal (291) 62
idf (292) 1 5 6 10 13 14 15 16 20 21 28 29 31 38 39 40 53
reel (293) 8 42
entier (294) 7 14 16 41 53


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
S (41)
    on left: 1, on right: 0
LISTE_DEC (42)
    on left: 2 3, on right: 1 2
DEC (43)
    on left: 4 5 6, on right: 2
VALEUR (44)
    on left: 7 8, on right: 5
TYPE (45)
    on left: 9 10, on right: 4
TYPE_SIMPLE (46)
    on left: 11 12, on right: 9 19
LISTE_VAR (47)
    on left: 13 14 15 16, on right: 4 13 14
LISTE_DEC_SIMPLE (48)
    on left: 17 18, on right: 6 17
DEC_SIMPLE (49)
    on left: 19, on right: 17
LISTE_VAR_SIMPLE (50)
    on left: 20 21, on right: 19 20
LISTE_INST (51)
    on left: 22 23, on right: 1 22 44 45 46 48 51
INST (52)
    on left: 24 25 26 27, on right: 22
INST_AFF (53)
    on left: 28 29 30, on right: 24
A (54)
    on left: 31, on right: 30
EXP (55)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43, on right: 28 29 30
    31 32 33 34 35 36 37 40 43 52 53 57 58 59 60 61 62
INST_IF (56)
    on left: 44 45, on right: 25
AVANT_ELSE (57)
    on left: 46, on right: 44
AVANT_INST (58)
    on left: 47, on right: 45 46
INST_WHILE (59)
    on left: 48, on right: 26
APRES_COND_WHILE (60)
    on left: 49, on right: 48
AVANT_COND_WHILE (61)
    on left: 50, on right: 49
INST_FOR (62)
    on left: 51, on right: 27
AVANT_INST_FOR (63)
    on left: 52, on right: 51
AVANT_COND_FOR (64)
    on left: 53, on right: 52
COND (65)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 47 49 54 55 56
    63


State 0

    0 $accept: . S $end
    1 S: . idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer

    idf  shift, and go to state 1

    S  go to state 2


State 1

    1 S: idf . acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer

    acc_ouv  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: idf acc_ouv . mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer

    mc_var  shift, and go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: idf acc_ouv mc_var . acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer

    acc_ouv  shift, and go to state 6


State 6

    1 S: idf acc_ouv mc_var acc_ouv . LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer
    2 LISTE_DEC: . LISTE_DEC DEC
    3          | .

    $default  reduce using rule 3 (LISTE_DEC)

    LISTE_DEC  go to state 7


State 7

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC . acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer
    2 LISTE_DEC: LISTE_DEC . DEC
    4 DEC: . TYPE LISTE_VAR pvg
    5    | . mc_const idf aff VALEUR pvg
    6    | . mc_struct acc_ouv LISTE_DEC_SIMPLE acc_fer idf pvg
    9 TYPE: . TYPE_SIMPLE
   10     | . mc_struct idf
   11 TYPE_SIMPLE: . mc_integer
   12            | . mc_float

    mc_integer  shift, and go to state 8
    mc_float    shift, and go to state 9
    mc_const    shift, and go to state 10
    mc_struct   shift, and go to state 11
    acc_fer     shift, and go to state 12

    DEC          go to state 13
    TYPE         go to state 14
    TYPE_SIMPLE  go to state 15


State 8

   11 TYPE_SIMPLE: mc_integer .

    $default  reduce using rule 11 (TYPE_SIMPLE)


State 9

   12 TYPE_SIMPLE: mc_float .

    $default  reduce using rule 12 (TYPE_SIMPLE)


State 10

    5 DEC: mc_const . idf aff VALEUR pvg

    idf  shift, and go to state 16


State 11

    6 DEC: mc_struct . acc_ouv LISTE_DEC_SIMPLE acc_fer idf pvg
   10 TYPE: mc_struct . idf

    acc_ouv  shift, and go to state 17
    idf      shift, and go to state 18


State 12

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer . mc_code acc_ouv LISTE_INST acc_fer acc_fer

    mc_code  shift, and go to state 19


State 13

    2 LISTE_DEC: LISTE_DEC DEC .

    $default  reduce using rule 2 (LISTE_DEC)


State 14

    4 DEC: TYPE . LISTE_VAR pvg
   13 LISTE_VAR: . LISTE_VAR vg idf
   14          | . LISTE_VAR vg idf croch_ouv entier croch_fer
   15          | . idf
   16          | . idf croch_ouv entier croch_fer

    idf  shift, and go to state 20

    LISTE_VAR  go to state 21


State 15

    9 TYPE: TYPE_SIMPLE .

    $default  reduce using rule 9 (TYPE)


State 16

    5 DEC: mc_const idf . aff VALEUR pvg

    aff  shift, and go to state 22


State 17

    6 DEC: mc_struct acc_ouv . LISTE_DEC_SIMPLE acc_fer idf pvg
   17 LISTE_DEC_SIMPLE: . LISTE_DEC_SIMPLE DEC_SIMPLE
   18                 | .

    $default  reduce using rule 18 (LISTE_DEC_SIMPLE)

    LISTE_DEC_SIMPLE  go to state 23


State 18

   10 TYPE: mc_struct idf .

    $default  reduce using rule 10 (TYPE)


State 19

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code . acc_ouv LISTE_INST acc_fer acc_fer

    acc_ouv  shift, and go to state 24


State 20

   15 LISTE_VAR: idf .
   16          | idf . croch_ouv entier croch_fer

    croch_ouv  shift, and go to state 25

    $default  reduce using rule 15 (LISTE_VAR)


State 21

    4 DEC: TYPE LISTE_VAR . pvg
   13 LISTE_VAR: LISTE_VAR . vg idf
   14          | LISTE_VAR . vg idf croch_ouv entier croch_fer

    pvg  shift, and go to state 26
    vg   shift, and go to state 27


State 22

    5 DEC: mc_const idf aff . VALEUR pvg
    7 VALEUR: . entier
    8       | . reel

    reel    shift, and go to state 28
    entier  shift, and go to state 29

    VALEUR  go to state 30


State 23

    6 DEC: mc_struct acc_ouv LISTE_DEC_SIMPLE . acc_fer idf pvg
   11 TYPE_SIMPLE: . mc_integer
   12            | . mc_float
   17 LISTE_DEC_SIMPLE: LISTE_DEC_SIMPLE . DEC_SIMPLE
   19 DEC_SIMPLE: . TYPE_SIMPLE LISTE_VAR_SIMPLE pvg

    mc_integer  shift, and go to state 8
    mc_float    shift, and go to state 9
    acc_fer     shift, and go to state 31

    TYPE_SIMPLE  go to state 32
    DEC_SIMPLE   go to state 33


State 24

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv . LISTE_INST acc_fer acc_fer
   22 LISTE_INST: . LISTE_INST INST
   23           | .

    $default  reduce using rule 23 (LISTE_INST)

    LISTE_INST  go to state 34


State 25

   16 LISTE_VAR: idf croch_ouv . entier croch_fer

    entier  shift, and go to state 35


State 26

    4 DEC: TYPE LISTE_VAR pvg .

    $default  reduce using rule 4 (DEC)


State 27

   13 LISTE_VAR: LISTE_VAR vg . idf
   14          | LISTE_VAR vg . idf croch_ouv entier croch_fer

    idf  shift, and go to state 36


State 28

    8 VALEUR: reel .

    $default  reduce using rule 8 (VALEUR)


State 29

    7 VALEUR: entier .

    $default  reduce using rule 7 (VALEUR)


State 30

    5 DEC: mc_const idf aff VALEUR . pvg

    pvg  shift, and go to state 37


State 31

    6 DEC: mc_struct acc_ouv LISTE_DEC_SIMPLE acc_fer . idf pvg

    idf  shift, and go to state 38


State 32

   19 DEC_SIMPLE: TYPE_SIMPLE . LISTE_VAR_SIMPLE pvg
   20 LISTE_VAR_SIMPLE: . LISTE_VAR_SIMPLE vg idf
   21                 | . idf

    idf  shift, and go to state 39

    LISTE_VAR_SIMPLE  go to state 40


State 33

   17 LISTE_DEC_SIMPLE: LISTE_DEC_SIMPLE DEC_SIMPLE .

    $default  reduce using rule 17 (LISTE_DEC_SIMPLE)


State 34

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST . acc_fer acc_fer
   22 LISTE_INST: LISTE_INST . INST
   24 INST: . INST_AFF
   25     | . INST_IF
   26     | . INST_WHILE
   27     | . INST_FOR
   28 INST_AFF: . idf aff EXP pvg
   29         | . idf point idf aff EXP pvg
   30         | . A aff EXP pvg
   31 A: . idf croch_ouv EXP croch_fer
   44 INST_IF: . AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   45        | . AVANT_INST acc_ouv LISTE_INST acc_fer
   46 AVANT_ELSE: . AVANT_INST acc_ouv LISTE_INST acc_fer
   47 AVANT_INST: . mc_if par_ouv COND par_fer
   48 INST_WHILE: . APRES_COND_WHILE acc_ouv LISTE_INST acc_fer
   49 APRES_COND_WHILE: . AVANT_COND_WHILE par_ouv COND par_fer
   50 AVANT_COND_WHILE: . mc_while
   51 INST_FOR: . AVANT_INST_FOR acc_ouv LISTE_INST acc_fer
   52 AVANT_INST_FOR: . AVANT_COND_FOR EXP par_fer
   53 AVANT_COND_FOR: . mc_for par_ouv idf deux_points EXP deux_points entier deux_points

    mc_if     shift, and go to state 41
    mc_for    shift, and go to state 42
    mc_while  shift, and go to state 43
    acc_fer   shift, and go to state 44
    idf       shift, and go to state 45

    INST              go to state 46
    INST_AFF          go to state 47
    A                 go to state 48
    INST_IF           go to state 49
    AVANT_ELSE        go to state 50
    AVANT_INST        go to state 51
    INST_WHILE        go to state 52
    APRES_COND_WHILE  go to state 53
    AVANT_COND_WHILE  go to state 54
    INST_FOR          go to state 55
    AVANT_INST_FOR    go to state 56
    AVANT_COND_FOR    go to state 57


State 35

   16 LISTE_VAR: idf croch_ouv entier . croch_fer

    croch_fer  shift, and go to state 58


State 36

   13 LISTE_VAR: LISTE_VAR vg idf .
   14          | LISTE_VAR vg idf . croch_ouv entier croch_fer

    croch_ouv  shift, and go to state 59

    $default  reduce using rule 13 (LISTE_VAR)


State 37

    5 DEC: mc_const idf aff VALEUR pvg .

    $default  reduce using rule 5 (DEC)


State 38

    6 DEC: mc_struct acc_ouv LISTE_DEC_SIMPLE acc_fer idf . pvg

    pvg  shift, and go to state 60


State 39

   21 LISTE_VAR_SIMPLE: idf .

    $default  reduce using rule 21 (LISTE_VAR_SIMPLE)


State 40

   19 DEC_SIMPLE: TYPE_SIMPLE LISTE_VAR_SIMPLE . pvg
   20 LISTE_VAR_SIMPLE: LISTE_VAR_SIMPLE . vg idf

    pvg  shift, and go to state 61
    vg   shift, and go to state 62


State 41

   47 AVANT_INST: mc_if . par_ouv COND par_fer

    par_ouv  shift, and go to state 63


State 42

   53 AVANT_COND_FOR: mc_for . par_ouv idf deux_points EXP deux_points entier deux_points

    par_ouv  shift, and go to state 64


State 43

   50 AVANT_COND_WHILE: mc_while .

    $default  reduce using rule 50 (AVANT_COND_WHILE)


State 44

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer . acc_fer

    acc_fer  shift, and go to state 65


State 45

   28 INST_AFF: idf . aff EXP pvg
   29         | idf . point idf aff EXP pvg
   31 A: idf . croch_ouv EXP croch_fer

    croch_ouv  shift, and go to state 66
    aff        shift, and go to state 67
    point      shift, and go to state 68


State 46

   22 LISTE_INST: LISTE_INST INST .

    $default  reduce using rule 22 (LISTE_INST)


State 47

   24 INST: INST_AFF .

    $default  reduce using rule 24 (INST)


State 48

   30 INST_AFF: A . aff EXP pvg

    aff  shift, and go to state 69


State 49

   25 INST: INST_IF .

    $default  reduce using rule 25 (INST)


State 50

   44 INST_IF: AVANT_ELSE . mc_else acc_ouv LISTE_INST acc_fer

    mc_else  shift, and go to state 70


State 51

   45 INST_IF: AVANT_INST . acc_ouv LISTE_INST acc_fer
   46 AVANT_ELSE: AVANT_INST . acc_ouv LISTE_INST acc_fer

    acc_ouv  shift, and go to state 71


State 52

   26 INST: INST_WHILE .

    $default  reduce using rule 26 (INST)


State 53

   48 INST_WHILE: APRES_COND_WHILE . acc_ouv LISTE_INST acc_fer

    acc_ouv  shift, and go to state 72


State 54

   49 APRES_COND_WHILE: AVANT_COND_WHILE . par_ouv COND par_fer

    par_ouv  shift, and go to state 73


State 55

   27 INST: INST_FOR .

    $default  reduce using rule 27 (INST)


State 56

   51 INST_FOR: AVANT_INST_FOR . acc_ouv LISTE_INST acc_fer

    acc_ouv  shift, and go to state 74


State 57

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   52 AVANT_INST_FOR: AVANT_COND_FOR . EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 81


State 58

   16 LISTE_VAR: idf croch_ouv entier croch_fer .

    $default  reduce using rule 16 (LISTE_VAR)


State 59

   14 LISTE_VAR: LISTE_VAR vg idf croch_ouv . entier croch_fer

    entier  shift, and go to state 82


State 60

    6 DEC: mc_struct acc_ouv LISTE_DEC_SIMPLE acc_fer idf pvg .

    $default  reduce using rule 6 (DEC)


State 61

   19 DEC_SIMPLE: TYPE_SIMPLE LISTE_VAR_SIMPLE pvg .

    $default  reduce using rule 19 (DEC_SIMPLE)


State 62

   20 LISTE_VAR_SIMPLE: LISTE_VAR_SIMPLE vg . idf

    idf  shift, and go to state 83


State 63

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   47 AVANT_INST: mc_if par_ouv . COND par_fer
   54 COND: . COND or COND
   55     | . COND and COND
   56     | . not COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 86
    COND  go to state 87


State 64

   53 AVANT_COND_FOR: mc_for par_ouv . idf deux_points EXP deux_points entier deux_points

    idf  shift, and go to state 88


State 65

    1 S: idf acc_ouv mc_var acc_ouv LISTE_DEC acc_fer mc_code acc_ouv LISTE_INST acc_fer acc_fer .

    $default  reduce using rule 1 (S)


State 66

   31 A: idf croch_ouv . EXP croch_fer
   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 89


State 67

   28 INST_AFF: idf aff . EXP pvg
   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 90


State 68

   29 INST_AFF: idf point . idf aff EXP pvg

    idf  shift, and go to state 91


State 69

   30 INST_AFF: A aff . EXP pvg
   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 92


State 70

   44 INST_IF: AVANT_ELSE mc_else . acc_ouv LISTE_INST acc_fer

    acc_ouv  shift, and go to state 93


State 71

   22 LISTE_INST: . LISTE_INST INST
   23           | .
   45 INST_IF: AVANT_INST acc_ouv . LISTE_INST acc_fer
   46 AVANT_ELSE: AVANT_INST acc_ouv . LISTE_INST acc_fer

    $default  reduce using rule 23 (LISTE_INST)

    LISTE_INST  go to state 94


State 72

   22 LISTE_INST: . LISTE_INST INST
   23           | .
   48 INST_WHILE: APRES_COND_WHILE acc_ouv . LISTE_INST acc_fer

    $default  reduce using rule 23 (LISTE_INST)

    LISTE_INST  go to state 95


State 73

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   49 APRES_COND_WHILE: AVANT_COND_WHILE par_ouv . COND par_fer
   54 COND: . COND or COND
   55     | . COND and COND
   56     | . not COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 86
    COND  go to state 96


State 74

   22 LISTE_INST: . LISTE_INST INST
   23           | .
   51 INST_FOR: AVANT_INST_FOR acc_ouv . LISTE_INST acc_fer

    $default  reduce using rule 23 (LISTE_INST)

    LISTE_INST  go to state 97


State 75

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   43    | par_ouv . EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 98


State 76

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   37    | plus . EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 99


State 77

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   36    | moins . EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 100


State 78

   38 EXP: idf .
   39    | idf . point idf
   40    | idf . croch_ouv EXP croch_fer

    croch_ouv  shift, and go to state 101
    point      shift, and go to state 102

    $default  reduce using rule 38 (EXP)


State 79

   42 EXP: reel .

    $default  reduce using rule 42 (EXP)


State 80

   41 EXP: entier .

    $default  reduce using rule 41 (EXP)


State 81

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   52 AVANT_INST_FOR: AVANT_COND_FOR EXP . par_fer

    par_fer  shift, and go to state 103
    plus     shift, and go to state 104
    moins    shift, and go to state 105
    slash    shift, and go to state 106
    etoile   shift, and go to state 107


State 82

   14 LISTE_VAR: LISTE_VAR vg idf croch_ouv entier . croch_fer

    croch_fer  shift, and go to state 108


State 83

   20 LISTE_VAR_SIMPLE: LISTE_VAR_SIMPLE vg idf .

    $default  reduce using rule 20 (LISTE_VAR_SIMPLE)


State 84

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   43    | par_ouv . EXP par_fer
   54 COND: . COND or COND
   55     | . COND and COND
   56     | . not COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer
   63     | par_ouv . COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 109
    COND  go to state 110


State 85

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   54 COND: . COND or COND
   55     | . COND and COND
   56     | . not COND
   56     | not . COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 86
    COND  go to state 111


State 86

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   57 COND: EXP . inf EXP
   58     | EXP . sup EXP
   59     | EXP . inf_egal EXP
   60     | EXP . sup_egal EXP
   61     | EXP . egal_egal EXP
   62     | EXP . non_egal EXP

    plus       shift, and go to state 104
    moins      shift, and go to state 105
    slash      shift, and go to state 106
    etoile     shift, and go to state 107
    sup        shift, and go to state 112
    inf        shift, and go to state 113
    sup_egal   shift, and go to state 114
    inf_egal   shift, and go to state 115
    egal_egal  shift, and go to state 116
    non_egal   shift, and go to state 117


State 87

   47 AVANT_INST: mc_if par_ouv COND . par_fer
   54 COND: COND . or COND
   55     | COND . and COND

    par_fer  shift, and go to state 118
    and      shift, and go to state 119
    or       shift, and go to state 120


State 88

   53 AVANT_COND_FOR: mc_for par_ouv idf . deux_points EXP deux_points entier deux_points

    deux_points  shift, and go to state 121


State 89

   31 A: idf croch_ouv EXP . croch_fer
   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    croch_fer  shift, and go to state 122
    plus       shift, and go to state 104
    moins      shift, and go to state 105
    slash      shift, and go to state 106
    etoile     shift, and go to state 107


State 90

   28 INST_AFF: idf aff EXP . pvg
   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    pvg     shift, and go to state 123
    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107


State 91

   29 INST_AFF: idf point idf . aff EXP pvg

    aff  shift, and go to state 124


State 92

   30 INST_AFF: A aff EXP . pvg
   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    pvg     shift, and go to state 125
    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107


State 93

   22 LISTE_INST: . LISTE_INST INST
   23           | .
   44 INST_IF: AVANT_ELSE mc_else acc_ouv . LISTE_INST acc_fer

    $default  reduce using rule 23 (LISTE_INST)

    LISTE_INST  go to state 126


State 94

   22 LISTE_INST: LISTE_INST . INST
   24 INST: . INST_AFF
   25     | . INST_IF
   26     | . INST_WHILE
   27     | . INST_FOR
   28 INST_AFF: . idf aff EXP pvg
   29         | . idf point idf aff EXP pvg
   30         | . A aff EXP pvg
   31 A: . idf croch_ouv EXP croch_fer
   44 INST_IF: . AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   45        | . AVANT_INST acc_ouv LISTE_INST acc_fer
   45        | AVANT_INST acc_ouv LISTE_INST . acc_fer
   46 AVANT_ELSE: . AVANT_INST acc_ouv LISTE_INST acc_fer
   46           | AVANT_INST acc_ouv LISTE_INST . acc_fer
   47 AVANT_INST: . mc_if par_ouv COND par_fer
   48 INST_WHILE: . APRES_COND_WHILE acc_ouv LISTE_INST acc_fer
   49 APRES_COND_WHILE: . AVANT_COND_WHILE par_ouv COND par_fer
   50 AVANT_COND_WHILE: . mc_while
   51 INST_FOR: . AVANT_INST_FOR acc_ouv LISTE_INST acc_fer
   52 AVANT_INST_FOR: . AVANT_COND_FOR EXP par_fer
   53 AVANT_COND_FOR: . mc_for par_ouv idf deux_points EXP deux_points entier deux_points

    mc_if     shift, and go to state 41
    mc_for    shift, and go to state 42
    mc_while  shift, and go to state 43
    acc_fer   shift, and go to state 127
    idf       shift, and go to state 45

    INST              go to state 46
    INST_AFF          go to state 47
    A                 go to state 48
    INST_IF           go to state 49
    AVANT_ELSE        go to state 50
    AVANT_INST        go to state 51
    INST_WHILE        go to state 52
    APRES_COND_WHILE  go to state 53
    AVANT_COND_WHILE  go to state 54
    INST_FOR          go to state 55
    AVANT_INST_FOR    go to state 56
    AVANT_COND_FOR    go to state 57


State 95

   22 LISTE_INST: LISTE_INST . INST
   24 INST: . INST_AFF
   25     | . INST_IF
   26     | . INST_WHILE
   27     | . INST_FOR
   28 INST_AFF: . idf aff EXP pvg
   29         | . idf point idf aff EXP pvg
   30         | . A aff EXP pvg
   31 A: . idf croch_ouv EXP croch_fer
   44 INST_IF: . AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   45        | . AVANT_INST acc_ouv LISTE_INST acc_fer
   46 AVANT_ELSE: . AVANT_INST acc_ouv LISTE_INST acc_fer
   47 AVANT_INST: . mc_if par_ouv COND par_fer
   48 INST_WHILE: . APRES_COND_WHILE acc_ouv LISTE_INST acc_fer
   48           | APRES_COND_WHILE acc_ouv LISTE_INST . acc_fer
   49 APRES_COND_WHILE: . AVANT_COND_WHILE par_ouv COND par_fer
   50 AVANT_COND_WHILE: . mc_while
   51 INST_FOR: . AVANT_INST_FOR acc_ouv LISTE_INST acc_fer
   52 AVANT_INST_FOR: . AVANT_COND_FOR EXP par_fer
   53 AVANT_COND_FOR: . mc_for par_ouv idf deux_points EXP deux_points entier deux_points

    mc_if     shift, and go to state 41
    mc_for    shift, and go to state 42
    mc_while  shift, and go to state 43
    acc_fer   shift, and go to state 128
    idf       shift, and go to state 45

    INST              go to state 46
    INST_AFF          go to state 47
    A                 go to state 48
    INST_IF           go to state 49
    AVANT_ELSE        go to state 50
    AVANT_INST        go to state 51
    INST_WHILE        go to state 52
    APRES_COND_WHILE  go to state 53
    AVANT_COND_WHILE  go to state 54
    INST_FOR          go to state 55
    AVANT_INST_FOR    go to state 56
    AVANT_COND_FOR    go to state 57


State 96

   49 APRES_COND_WHILE: AVANT_COND_WHILE par_ouv COND . par_fer
   54 COND: COND . or COND
   55     | COND . and COND

    par_fer  shift, and go to state 129
    and      shift, and go to state 119
    or       shift, and go to state 120


State 97

   22 LISTE_INST: LISTE_INST . INST
   24 INST: . INST_AFF
   25     | . INST_IF
   26     | . INST_WHILE
   27     | . INST_FOR
   28 INST_AFF: . idf aff EXP pvg
   29         | . idf point idf aff EXP pvg
   30         | . A aff EXP pvg
   31 A: . idf croch_ouv EXP croch_fer
   44 INST_IF: . AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   45        | . AVANT_INST acc_ouv LISTE_INST acc_fer
   46 AVANT_ELSE: . AVANT_INST acc_ouv LISTE_INST acc_fer
   47 AVANT_INST: . mc_if par_ouv COND par_fer
   48 INST_WHILE: . APRES_COND_WHILE acc_ouv LISTE_INST acc_fer
   49 APRES_COND_WHILE: . AVANT_COND_WHILE par_ouv COND par_fer
   50 AVANT_COND_WHILE: . mc_while
   51 INST_FOR: . AVANT_INST_FOR acc_ouv LISTE_INST acc_fer
   51         | AVANT_INST_FOR acc_ouv LISTE_INST . acc_fer
   52 AVANT_INST_FOR: . AVANT_COND_FOR EXP par_fer
   53 AVANT_COND_FOR: . mc_for par_ouv idf deux_points EXP deux_points entier deux_points

    mc_if     shift, and go to state 41
    mc_for    shift, and go to state 42
    mc_while  shift, and go to state 43
    acc_fer   shift, and go to state 130
    idf       shift, and go to state 45

    INST              go to state 46
    INST_AFF          go to state 47
    A                 go to state 48
    INST_IF           go to state 49
    AVANT_ELSE        go to state 50
    AVANT_INST        go to state 51
    INST_WHILE        go to state 52
    APRES_COND_WHILE  go to state 53
    AVANT_COND_WHILE  go to state 54
    INST_FOR          go to state 55
    AVANT_INST_FOR    go to state 56
    AVANT_COND_FOR    go to state 57


State 98

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   43    | par_ouv EXP . par_fer

    par_fer  shift, and go to state 131
    plus     shift, and go to state 104
    moins    shift, and go to state 105
    slash    shift, and go to state 106
    etoile   shift, and go to state 107


State 99

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   37    | plus EXP .

    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 37 (EXP)


State 100

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   36    | moins EXP .

    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 36 (EXP)


State 101

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   40    | idf croch_ouv . EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 132


State 102

   39 EXP: idf point . idf

    idf  shift, and go to state 133


State 103

   52 AVANT_INST_FOR: AVANT_COND_FOR EXP par_fer .

    $default  reduce using rule 52 (AVANT_INST_FOR)


State 104

   32 EXP: . EXP plus EXP
   32    | EXP plus . EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 134


State 105

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   33    | EXP moins . EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 135


State 106

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   34    | EXP slash . EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 136


State 107

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   35    | EXP etoile . EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 137


State 108

   14 LISTE_VAR: LISTE_VAR vg idf croch_ouv entier croch_fer .

    $default  reduce using rule 14 (LISTE_VAR)


State 109

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   43    | par_ouv EXP . par_fer
   57 COND: EXP . inf EXP
   58     | EXP . sup EXP
   59     | EXP . inf_egal EXP
   60     | EXP . sup_egal EXP
   61     | EXP . egal_egal EXP
   62     | EXP . non_egal EXP

    par_fer    shift, and go to state 131
    plus       shift, and go to state 104
    moins      shift, and go to state 105
    slash      shift, and go to state 106
    etoile     shift, and go to state 107
    sup        shift, and go to state 112
    inf        shift, and go to state 113
    sup_egal   shift, and go to state 114
    inf_egal   shift, and go to state 115
    egal_egal  shift, and go to state 116
    non_egal   shift, and go to state 117


State 110

   54 COND: COND . or COND
   55     | COND . and COND
   63     | par_ouv COND . par_fer

    par_fer  shift, and go to state 138
    and      shift, and go to state 119
    or       shift, and go to state 120


State 111

   54 COND: COND . or COND
   55     | COND . and COND
   56     | not COND .

    $default  reduce using rule 56 (COND)


State 112

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   58 COND: EXP sup . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 139


State 113

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   57 COND: EXP inf . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 140


State 114

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   60 COND: EXP sup_egal . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 141


State 115

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   59 COND: EXP inf_egal . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 142


State 116

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   61 COND: EXP egal_egal . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 143


State 117

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   62 COND: EXP non_egal . EXP

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 144


State 118

   47 AVANT_INST: mc_if par_ouv COND par_fer .

    $default  reduce using rule 47 (AVANT_INST)


State 119

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   54 COND: . COND or COND
   55     | . COND and COND
   55     | COND and . COND
   56     | . not COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 86
    COND  go to state 145


State 120

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   54 COND: . COND or COND
   54     | COND or . COND
   55     | . COND and COND
   56     | . not COND
   57     | . EXP inf EXP
   58     | . EXP sup EXP
   59     | . EXP inf_egal EXP
   60     | . EXP sup_egal EXP
   61     | . EXP egal_egal EXP
   62     | . EXP non_egal EXP
   63     | . par_ouv COND par_fer

    par_ouv  shift, and go to state 84
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    not      shift, and go to state 85
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP   go to state 86
    COND  go to state 146


State 121

   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer
   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points . EXP deux_points entier deux_points

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 147


State 122

   31 A: idf croch_ouv EXP croch_fer .

    $default  reduce using rule 31 (A)


State 123

   28 INST_AFF: idf aff EXP pvg .

    $default  reduce using rule 28 (INST_AFF)


State 124

   29 INST_AFF: idf point idf aff . EXP pvg
   32 EXP: . EXP plus EXP
   33    | . EXP moins EXP
   34    | . EXP slash EXP
   35    | . EXP etoile EXP
   36    | . moins EXP
   37    | . plus EXP
   38    | . idf
   39    | . idf point idf
   40    | . idf croch_ouv EXP croch_fer
   41    | . entier
   42    | . reel
   43    | . par_ouv EXP par_fer

    par_ouv  shift, and go to state 75
    plus     shift, and go to state 76
    moins    shift, and go to state 77
    idf      shift, and go to state 78
    reel     shift, and go to state 79
    entier   shift, and go to state 80

    EXP  go to state 148


State 125

   30 INST_AFF: A aff EXP pvg .

    $default  reduce using rule 30 (INST_AFF)


State 126

   22 LISTE_INST: LISTE_INST . INST
   24 INST: . INST_AFF
   25     | . INST_IF
   26     | . INST_WHILE
   27     | . INST_FOR
   28 INST_AFF: . idf aff EXP pvg
   29         | . idf point idf aff EXP pvg
   30         | . A aff EXP pvg
   31 A: . idf croch_ouv EXP croch_fer
   44 INST_IF: . AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer
   44        | AVANT_ELSE mc_else acc_ouv LISTE_INST . acc_fer
   45        | . AVANT_INST acc_ouv LISTE_INST acc_fer
   46 AVANT_ELSE: . AVANT_INST acc_ouv LISTE_INST acc_fer
   47 AVANT_INST: . mc_if par_ouv COND par_fer
   48 INST_WHILE: . APRES_COND_WHILE acc_ouv LISTE_INST acc_fer
   49 APRES_COND_WHILE: . AVANT_COND_WHILE par_ouv COND par_fer
   50 AVANT_COND_WHILE: . mc_while
   51 INST_FOR: . AVANT_INST_FOR acc_ouv LISTE_INST acc_fer
   52 AVANT_INST_FOR: . AVANT_COND_FOR EXP par_fer
   53 AVANT_COND_FOR: . mc_for par_ouv idf deux_points EXP deux_points entier deux_points

    mc_if     shift, and go to state 41
    mc_for    shift, and go to state 42
    mc_while  shift, and go to state 43
    acc_fer   shift, and go to state 149
    idf       shift, and go to state 45

    INST              go to state 46
    INST_AFF          go to state 47
    A                 go to state 48
    INST_IF           go to state 49
    AVANT_ELSE        go to state 50
    AVANT_INST        go to state 51
    INST_WHILE        go to state 52
    APRES_COND_WHILE  go to state 53
    AVANT_COND_WHILE  go to state 54
    INST_FOR          go to state 55
    AVANT_INST_FOR    go to state 56
    AVANT_COND_FOR    go to state 57


State 127

   45 INST_IF: AVANT_INST acc_ouv LISTE_INST acc_fer .
   46 AVANT_ELSE: AVANT_INST acc_ouv LISTE_INST acc_fer .

    mc_else   reduce using rule 46 (AVANT_ELSE)
    $default  reduce using rule 45 (INST_IF)


State 128

   48 INST_WHILE: APRES_COND_WHILE acc_ouv LISTE_INST acc_fer .

    $default  reduce using rule 48 (INST_WHILE)


State 129

   49 APRES_COND_WHILE: AVANT_COND_WHILE par_ouv COND par_fer .

    $default  reduce using rule 49 (APRES_COND_WHILE)


State 130

   51 INST_FOR: AVANT_INST_FOR acc_ouv LISTE_INST acc_fer .

    $default  reduce using rule 51 (INST_FOR)


State 131

   43 EXP: par_ouv EXP par_fer .

    $default  reduce using rule 43 (EXP)


State 132

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   40    | idf croch_ouv EXP . croch_fer

    croch_fer  shift, and go to state 150
    plus       shift, and go to state 104
    moins      shift, and go to state 105
    slash      shift, and go to state 106
    etoile     shift, and go to state 107


State 133

   39 EXP: idf point idf .

    $default  reduce using rule 39 (EXP)


State 134

   32 EXP: EXP . plus EXP
   32    | EXP plus EXP .
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 32 (EXP)


State 135

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   33    | EXP moins EXP .
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 33 (EXP)


State 136

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   34    | EXP slash EXP .
   35    | EXP . etoile EXP

    $default  reduce using rule 34 (EXP)


State 137

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   35    | EXP etoile EXP .

    $default  reduce using rule 35 (EXP)


State 138

   63 COND: par_ouv COND par_fer .

    $default  reduce using rule 63 (COND)


State 139

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   58 COND: EXP sup EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 58 (COND)


State 140

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   57 COND: EXP inf EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 57 (COND)


State 141

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   60 COND: EXP sup_egal EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 60 (COND)


State 142

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   59 COND: EXP inf_egal EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 59 (COND)


State 143

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   61 COND: EXP egal_egal EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 61 (COND)


State 144

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   62 COND: EXP non_egal EXP .

    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107

    $default  reduce using rule 62 (COND)


State 145

   54 COND: COND . or COND
   55     | COND . and COND
   55     | COND and COND .

    $default  reduce using rule 55 (COND)


State 146

   54 COND: COND . or COND
   54     | COND or COND .
   55     | COND . and COND

    and  shift, and go to state 119

    $default  reduce using rule 54 (COND)


State 147

   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP
   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points EXP . deux_points entier deux_points

    deux_points  shift, and go to state 151
    plus         shift, and go to state 104
    moins        shift, and go to state 105
    slash        shift, and go to state 106
    etoile       shift, and go to state 107


State 148

   29 INST_AFF: idf point idf aff EXP . pvg
   32 EXP: EXP . plus EXP
   33    | EXP . moins EXP
   34    | EXP . slash EXP
   35    | EXP . etoile EXP

    pvg     shift, and go to state 152
    plus    shift, and go to state 104
    moins   shift, and go to state 105
    slash   shift, and go to state 106
    etoile  shift, and go to state 107


State 149

   44 INST_IF: AVANT_ELSE mc_else acc_ouv LISTE_INST acc_fer .

    $default  reduce using rule 44 (INST_IF)


State 150

   40 EXP: idf croch_ouv EXP croch_fer .

    $default  reduce using rule 40 (EXP)


State 151

   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points EXP deux_points . entier deux_points

    entier  shift, and go to state 153


State 152

   29 INST_AFF: idf point idf aff EXP pvg .

    $default  reduce using rule 29 (INST_AFF)


State 153

   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points EXP deux_points entier . deux_points

    deux_points  shift, and go to state 154


State 154

   53 AVANT_COND_FOR: mc_for par_ouv idf deux_points EXP deux_points entier deux_points .

    $default  reduce using rule 53 (AVANT_COND_FOR)
